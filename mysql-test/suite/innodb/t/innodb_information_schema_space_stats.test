--source include/not_embedded.inc
--source include/have_innodb.inc

SET GLOBAL innodb_file_per_table = ON;

let $MYSQL_DATA_DIR = `SELECT @@datadir`;

--echo #
--echo # Expose I/O operations counters per tablespace
--echo #

CREATE TABLE t1 (a INT PRIMARY KEY, b INT) ENGINE=InnoDB;
CREATE TABLE t2 (a INT PRIMARY KEY, b INT) ENGINE=InnoDB;

--vertical_results

--echo # Wait for I/O to be started for the initial pages.
let $wait_timeout= 60;
let $wait_condition=
  SELECT COUNT(*) = 2 FROM INFORMATION_SCHEMA.INNODB_SPACE_STATS
  WHERE SPACE_NAME LIKE '%test/t%' AND WRITE_REQS = 4;
--source include/wait_condition.inc

--echo # Display statistics.
SELECT WRITE_REQS, WRITE_BYTES FROM INFORMATION_SCHEMA.INNODB_SPACE_STATS
  WHERE SPACE_NAME LIKE '%test/t%';

--echo # Insert into the index root.
BEGIN;
INSERT INTO t1 VALUES (1,1), (2,2);
INSERT INTO t2 VALUES (1,1), (2,2);
COMMIT;

--echo # Wait for I/O to be started (dirty index page to be flushed).
let $wait_timeout= 60;
let $wait_condition=
  SELECT COUNT(*) = 2 FROM INFORMATION_SCHEMA.INNODB_SPACE_STATS
  WHERE SPACE_NAME LIKE '%test/t%' AND WRITE_REQS = 5;
--source include/wait_condition.inc

--echo # Display statistics.
SELECT WRITE_REQS, WRITE_BYTES FROM INFORMATION_SCHEMA.INNODB_SPACE_STATS
  WHERE SPACE_NAME LIKE '%test/t%';

--echo # Display extension statistics.
SELECT EXTEND_REQS, EXTEND_BYTES FROM INFORMATION_SCHEMA.INNODB_SPACE_STATS
  WHERE SPACE_NAME LIKE '%test/t%';

--echo # Display tablespace names.
SELECT SUBSTRING(SPACE_NAME, -11) AS `SPACE_NAME` FROM
  INFORMATION_SCHEMA.INNODB_SPACE_STATS WHERE SPACE_NAME LIKE '%test/t%'
  ORDER BY SPACE;

--echo # Restart to simulate the tablespace cache being flushed.
--source include/restart_mysqld.inc

--echo # Now counters should have been reset.
SELECT SUBSTRING(SPACE_NAME, -11) AS `SPACE_NAME`, READ_REQS, WRITE_REQS, EXTEND_REQS
  FROM INFORMATION_SCHEMA.INNODB_SPACE_STATS WHERE SPACE_NAME LIKE '%test/t%';

--echo # Read from the tablespace.
SELECT COUNT(*) FROM t1;

--echo # Check that the read counters have been incremented.
SELECT READ_REQS, READ_BYTES FROM INFORMATION_SCHEMA.INNODB_SPACE_STATS
  WHERE SPACE_NAME LIKE '%test/t1%';

--echo # Check that statistics are not lost on rename.
RENAME TABLE t1 TO t3;

SELECT READ_REQS, READ_BYTES FROM INFORMATION_SCHEMA.INNODB_SPACE_STATS
  WHERE SPACE_NAME LIKE '%test/t3%';

--echo # Trigger a write operation to the tablespace.
INSERT INTO t3 VALUES (3,3);

--echo # Wait for tablespace to be flushed.
let $wait_timeout= 60;
let $wait_condition=
  SELECT COUNT(*) = 1 FROM INFORMATION_SCHEMA.INNODB_SPACE_STATS
  WHERE SPACE_NAME LIKE '%test/t3%' AND FLUSH_REQS > 0;
--source include/wait_condition.inc

--echo # Drop tables from the cache.
DROP TABLE t2, t3;

--echo # Dropped tables are removed from the cache.
SELECT COUNT(*) FROM INFORMATION_SCHEMA.INNODB_SPACE_STATS
  WHERE SPACE_NAME LIKE '%test/t%';
